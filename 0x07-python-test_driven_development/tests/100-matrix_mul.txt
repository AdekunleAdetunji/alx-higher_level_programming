This is the test file for the matrix_mul function of the 100-matrix_mul module.
This module contains three functions of which the topmost is the matrix_mul
function
The matrix_mul function takes two list of list as arguments and computes their
matrix mul printing the product of the matrix multiplication to the screen in a
case where no error is raised
If an error is raised, then the program terminates except the error is captured
In this test file various test cases will be explored in other to determine
demonstrate how the matrix_mul module behaves under various test conditions

In other to use this function first we import the function in the manner below
>>> matrix_mul = __import__("100-matrix_mul").matrix_mul

After the function have been imported then we are ready to use the function
using the following test cases

case 1:
In this test case the function will be used with the right arguments which is
a matrix_a with dimension (2, 3) and matrix_b with dimension (3, 2)
>>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2, 3], [4, 5, 6]])
[[9, 12, 15], [19, 26, 33], [29, 40, 51]]

case 2:
In this test case the function is called with a list of list made up of floats
>>> matrix_mul([[1.0, 2.0], [1.0, 2.0]], [[1], [2]])
[[5.0], [5.0]]



Error cases:
E_case 1:
In this error test case the function will be called with the wrong types of
arguments causing it to raise a TypeError as shown below
>>> matrix_mul('a', [])
Traceback (most recent call last):
TypeError: m_a must be a list

E_case 2:
In this error test case the function is called with a list of list whose
dimension do not follow the rule that guide matrix multiplication
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

E_case 3:
In this error test case the function is calle with a list that is not a list of
list
>>> matrix_mul([1, 2, 4], [2, 3, 5])
Traceback (most recent call last):
TypeError: m_a must be a list of list

E_case 4:
In this error test case the function is called with a list of list containing an
element that is not of type int nor float
>>> matrix_mul([[1, 3], [1, 2]], [[1], ['a']])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

E_case 5:
In this error test case the function is called with a an arguments containing
empty list
>>> matrix_mul([[]], [])
Traceback (most recent call last):
ValueError: m_a can't be empty

E_case 6:
In this error test case the function is called with a list of list that is not
of same size
>>> matrix_mul([[1, 2], [1, 2]], [[1, 3], [1]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size
